{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# CactusTool\n",
    "Basis class of CactusTool, anything start from it.\n",
    "* Par: parfile\n",
    "* Scalar\n",
    "* H5: HDF5\n",
    "* Debug"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Sim module"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You need use Sim module to load up data and make some visualizations.\n",
    "\n",
    "Acquiring the datasets\n",
    "\n",
    "For this dataset, we see that there are two particle types file "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-01-09T06:01:55.858679Z",
     "start_time": "2020-01-09T06:01:55.855417Z"
    },
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "from CactusTool import Simulation\n",
    "name = '/Users/liuyu/simulations/TOV_single_vel'\n",
    "# name = '/Users/liuyu/simulations/BH'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-01-09T06:02:12.081748Z",
     "start_time": "2020-01-09T06:02:12.072042Z"
    }
   },
   "outputs": [],
   "source": [
    "sim = Simulation(name)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Parfile\n",
    "Read parameter file if it exist."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-01-09T06:01:43.717052Z",
     "start_time": "2020-01-09T06:01:41.845Z"
    }
   },
   "outputs": [],
   "source": [
    "print(sim.Par)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-01-09T06:01:43.718596Z",
     "start_time": "2020-01-09T06:01:41.848Z"
    }
   },
   "outputs": [],
   "source": [
    "print(sim.Par.MoL)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Scalar\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Base Information"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-01-09T06:01:43.720057Z",
     "start_time": "2020-01-09T06:01:41.850Z"
    }
   },
   "outputs": [],
   "source": [
    "print(sim.Scalar)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-01-09T06:01:43.721460Z",
     "start_time": "2020-01-09T06:01:41.853Z"
    },
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "print(sim.Scalar.none)\n",
    "print(sim.Scalar.none['qlm_area[0]'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-01-09T06:01:43.723014Z",
     "start_time": "2020-01-09T06:01:41.856Z"
    },
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "print(sim.Scalar.none['qlm_area[0]'].y)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Plot"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## ASCII"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Base information"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Plot"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## HDF5"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Base Information"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-01-09T06:01:43.724366Z",
     "start_time": "2020-01-09T06:01:41.859Z"
    },
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "print(sim.H5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-01-09T06:01:43.725581Z",
     "start_time": "2020-01-09T06:01:41.862Z"
    }
   },
   "outputs": [],
   "source": [
    "print(sim.H5.xy['rho'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-01-09T06:01:43.726536Z",
     "start_time": "2020-01-09T06:01:41.864Z"
    }
   },
   "outputs": [],
   "source": [
    "'H' in sim.H5.xy"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Debug"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-01-09T06:01:43.727736Z",
     "start_time": "2020-01-09T06:01:41.866Z"
    }
   },
   "outputs": [],
   "source": [
    "files = sim.Debug.files\n",
    "print(files)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "file_extension": ".py",
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  },
  "mimetype": "text/x-python",
  "name": "python",
  "npconvert_exporter": "python",
  "pygments_lexer": "ipython3",
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": true
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  },
  "version": 3
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
